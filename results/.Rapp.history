matrix)
matrix()
matrix(c(1,2,3,4) rows=2)
matrix(c(1,2,3,4) nrows=2)
matrix(c(1,2,3,4) nrow=2)
matrix(c(1,2,3,4), nrow=2)
matrix(c(1,2,3,4), nrow=2, byrow=TRUE)
a = c(1,2,3)
a
b = c(4,5,6)
a*b
a/b
setwd(~)
setwd('~')
ls
a
b
mydata
x = c(1, 2, 3)
y=c(4,5,6)
z=c(7,8,9)
f = data.frame(x,y,z)
f
f[1]
f[[1]]
library(MASS)
painters
head(painters)
painters$colour
painters$Colour
table(painters$School)
help(table)
table(painters$School exclude=A)
table(painters$School, exclude=A)
table(painters$School, exclude="A")
cbin(table(painters$School, exclude="A"))
cbind(table(painters$School, exclude="A"))
school = table(painters$School)
school
school.freq
school.freq = school / nrwos(school)
school.freq = school / nrow(school)
school.freq
school.freq = school / nrow(painters)
school.freq
help(old)
help(options)
options()
options(digits=3)
school.freq
barplot(school.freq)
library(MASS)
school.freq = table(painters$school) / nrow(painters)
school.freq
school.freq = table(painters$School) / nrow(painters)
school.freq
pie(school.freq)
head(painters)
a_school = painters$School == "A"
a_school
a_painters = painters[a_school, ]
a_painters
mean(a_painters$Composition)
mode(a_painters$Drawing)
median(a_painters$Drawing)
modus(a_painters$Drawing)
head(faithful)
failtful
faithful
gap = faithful$waiting
head(gap)
range(gap)
ivs = seq(40, 100 by=10)
ivs = seq(40, 100, by=10)
ivs
gap.classes = cut(gap, ivs)
gap.classes
gap.classes = cut(gap, ivs, right=FALSE)
gap.classes
table(gap.classes)
hist(gap.classes)
hist(gaps, right=FALSE)
hist(gap, right=FALSE)
table(gap.classes)
gap.classes
table(gap.classes) / nrow(faithful)
options(digits=2)
table(gap.classes) / nrow(faithful)
cum = cumsum(table(gaps.classes))
cum = cumsum(table(gap.classes))
cum
cbind(cum, cum / nrow(faithful))
plot(cum)
plot(ins, cum)
plot(ivs, cum)
plot(cum, ivs)
plot(cum)
cum
help(cum)
help(plot)
help(plot, type="l")
plot(cum, type="l")
cum0 = c(0, cum)
plot(com0, ivs)
plot(cum0, ivs)
plot(cum0, ivs, type="l")
plot(ivs, cum0, type="l")
stem(gap)
hist(gap)
plot(faithful$eruptions, faithful$waiting)
abline(lm(faithful$eruptions ~ faithful$waiting))
duration = faithful$eruptions
plot(durations, gaps)
plot(durations, gap)
plot(duration, gap)
abline(lm(duration, gap))
abline(lm(duration ~ gap))
plot(duration, gap)
abline(lm(duration ~ gap))
plot(duration, gap)
abline(lm(gap ~ duration))
help(lm)
help(abline)
v = c(1, 2)
class(v)
gap = faithful$waiting
gap
max(gap)
min(gap)
range(gap)
quartile(gap, c(.22, .95))
quantile(gap, c(.22, .95))
quantile(gap)
IQR(gap)
boxplot(gap)
var(gap)
var(faithful$eruptions)
sqrt(184)
skewness(gap)
library(e1071)
help(skewness)
??skewness
library(moments)
skewness(gap)
ppois(12, lambda=12)
ppois(1, lambda=12)
ppois(6, lambda=12)
library(MASS)
help(qnorm)
height = na.omit(survey$Height)
height
qnorm(.975)
dnorm(.975)
qnorm(height, sd=10)
qnorm(190, mean=172, sd=9.5)
pnorm(190, mean=172, sd=9.5)
pnorm(.99, mean=172, sd=9.5)
qnorm(.99, mean=172, sd=9.5)
length(height)
sqrt(height)
sqrt(length(height))
qt(.99, 1)
qt(.95, 1)
qt(.95, 2)
qt(.95, 3)
qt(.95, 10)
qnorm(.95)
t.test(c(7, 9, 11, 13))
s = sqrt(5.5)
s
t = 10*2/s
t
ls
t
s = sqrt(20)
s
t = 10*2/s
t
s = sqrt(5)
t = 10*2/s
t
t = 10*sqrt(3)/s
t
n = s/sqrt(3)
n
prop.test(1, 2)
prop.test(10, 20)
qnorm(.975)^2 * 0.8 * 0.2 / 0.05^2
a = .05
q(norma)
qnorm(a)
z = (9900-10000)/120*sqrt(30)
z
pnorm(z)
z = (9900-10000)/120*sqrt(3)
z
pnorm(z)
z = (9900-10000)/120*sqrt(5); pnorm(z)
z = (9900-10000)/120*sqrt(4); pnorm(z)
z = (9990-10000)/120*sqrt(4); pnorm(z)
help(t.test)
plot(extra ~ group, data=sleep)
head(sleep)
help(t)
setwd("bidstat")
setwd("results")
source("partition.r")
ca = read.table("contested_auction.txt", header=TRUE)
head(ca)
cap = partition(ca, 200)
head(cap)
y = cap[,1]
c = cap[,2]
plot(y,c)
plot(y,c, ylim=c(0,1))
abline(c~r)
abline(lm(c~r))
abline(lm(c~y))
cap.lm = lm(c~y)
summary(cap.lm)
head(cap)
plot(y,c, ylim=c(0,1), xlab="Year", ylab="Freqeuncy contested auction")
abline(lm(c~y))
a
cap.lm = lm(c~y)
plot(y,c, ylim=c(0,1), xlab="Year", ylab="Freqeuncy contested auction")
abline(cap.lm)
ca = read.table("contested_auction.txt", header=TRUE)
cap = partition(ca, 200)
